Q: Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A: a0~a7 are for argument. a2 hold 13 and a1 hold 12
Q: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A: None, the functions are be optimized.
Q: At what address is the function printf located?
A: 642
Q: What value is in the register ra just after the jalr to printf in main?
A: 38
Q: Run the following code.

	unsigned int i = 0x00646c72;
	printf("H%x Wo%s", 57616, &i);
      
What is the output? Here's an ASCII table that maps bytes to characters.
The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
A: (1) output: HE110 World (2) 0x726c6400 (3) 286 (X) the difference just on the arragement, it would not modify the value 
Q: In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?

	printf("x=%d y=%d", 3);
A: because the va_arg would access the data out of va range 
